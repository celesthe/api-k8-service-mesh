name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  lint:
          name: Lint code with ESLint
          runs-on: ubuntu-latest
          needs: test
          steps:
            - name: Checkout code
              uses: actions/checkout@v3
      
            - name: Install dependencies
              run: npm install
      
            - name: Run ESLint
              run: npx eslint . --ext .js

              
  build-and-push:
    name: Build, Scan and Push Docker Image
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image
        run: docker build -t csazo2408/service-k8:latest .

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: csazo2408/service-k8:latest
          exit-code: '1'
          severity: 'CRITICAL,HIGH'

      - name: Push image
        run: docker push csazo2408/service-k8:latest


  deploy:
            runs-on: self-hosted  #  Aquí está la clave
            needs: build-and-push
            steps:
              - name: Checkout code
                uses: actions/checkout@v3
        
              - name: Aplicar manifiestos en Minikube
                run: |
                  kubectl apply -f k8/namespace.yml
                  kubectl apply -f k8/rbac.yml
                  kubectl apply -f k8/service1/deployment-api-backend.yml
                  kubectl apply -f k8/service2/deployment-api-backend.yml
                  kubectl apply -f k8/service3/deployment-api-backend.yml
                  kubectl apply -f k8/service1/service-api-backend.yml
                  kubectl apply -f k8/service2/service-api-backend.yml
                  kubectl apply -f k8/service3/service-api-backend.yml
                  kubectl apply -f k8/service1/destination-rule.yml
                  kubectl apply -f k8/service2/destination-rule.yml
                  kubectl apply -f k8/service3/destination-rule.yml
                  kubectl apply -f k8/service1/virtual-service.yml
                  kubectl apply -f k8/service2/virtual-service.yml
                  kubectl apply -f k8/service3/virtual-service.yml
              - name: Force rollout restart
                run: |
                  kubectl rollout restart deployment/api-service1-reto5-deployment -n reto5
                  kubectl rollout restart deployment/api-service1-reto5-deployment-v2 -n reto5
                  kubectl rollout restart deployment/api-service2-reto5-deployment -n reto5
                  kubectl rollout restart deployment/api-service2-reto5-deployment-v2 -n reto5
                  kubectl rollout restart deployment/api-service3-reto5-deployment -n reto5
                  kubectl rollout restart deployment/api-service3-reto5-deployment-v2 -n reto5